AWSTemplateFormatVersion: 2010-09-09
Description: "Elastic Container Service for jupyter"

Parameters:
  EcsVolumeName:
    Type: String
    ConstraintDescription: "volume name"
    Default: ecs-volume
  ExeIamRoleArn:
    Type: String
    ConstraintDescription: "ecs execute role arn"
  JupyterSecGroup:
    Type: String
    ConstraintDescription: "jupyter security group"
  JupyterSubnet:
    Type: String
    ConstraintDescription: "subnet on jupyter"
Resources:
  ECSLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: '/ecs/logs/{{resolve:ssm:/jupyter/ServiceName}}-tasklog' 
  # ---------------------------------------------
  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: "{{resolve:ssm:/jupyter/ServiceName}}-cluster"
      CapacityProviders:
        - FARGATE
        - FARGATE_SPOT
      DefaultCapacityProviderStrategy:
        - CapacityProvider: FARGATE
          Weight: 1
        - CapacityProvider: FARGATE_SPOT
          Weight: 1
      Tags:
        - Key: "Name"
          Value: "{{resolve:ssm:/jupyter/ServiceName}}-cluster"

  # ---------------------------------------------
  EcsTask:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: "{{resolve:ssm:/jupyter/ServiceName}}-task"
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref ExeIamRoleArn
      RequiresCompatibilities:
        - "FARGATE"
      # 0.25 vCPU
      Cpu: 256
      # 0.5 GB
      Memory: 512
      # -----------------
      # Container Definition
      # -----------------
      ContainerDefinitions: 
        - 
          Name: "{{resolve:ssm:/jupyter/ServiceName}}-container"
          MountPoints: 
            - 
              SourceVolume: !Ref EcsVolumeName
              ContainerPath: "/home/jovyan/work"
          Image: "jupyter/scipy-notebook:latest"
          # if failed, container stop.
          Essential: true
          PortMappings:
            - ContainerPort: 8888
              HostPort: 8888
          Environment:
            - Name: "JUPYTER_ENABLE_LAB"
              Value: "yes"
          # Logging
          LogConfiguration:
            LogDriver: "awslogs"
            Options: 
              awslogs-group: "/ecs/logs/{{resolve:ssm:/jupyter/ServiceName}}-tasklog"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: "ecs"
      # -----------------
      # Volume Definition
      # Use an aleadey created EFS.
      # -----------------
      Volumes: 
        - 
          Name: !Ref EcsVolumeName
          EFSVolumeConfiguration:
            AuthorizationConfig:
              AccessPointId: "{{resolve:ssm:/jupyter/FileSystemAp}}"
              IAM: "DISABLED"
            FilesystemId: "{{resolve:ssm:/jupyter/FileSystemId}}"
            RootDirectory: "/"
            TransitEncryption: "ENABLED"
    DependsOn: EcsCluster

  # ---------------------------------------------
  EcsService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref EcsCluster
      TaskDefinition: !Ref EcsTask
      SchedulingStrategy: "REPLICA"
      LaunchType: "FARGATE"
      DesiredCount: 1
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "ENABLED"
          SecurityGroups:
            - "{{resolve:ssm:/jupyter/DefaultSecGroup}}"
            - !Ref JupyterSecGroup
          Subnets:
            - !Ref JupyterSubnet
    DependsOn: EcsTask
Outputs:
  EcsClusterLid:
    Description: "ecs cluster logical id."
    Value: !Ref EcsCluster
  EcsTaskLid:
    Description: "ecs task definition logical id."
    Value: !Ref EcsTask
  EcsServiceLid:
    Description: "ecs service logical id."
    Value: !Ref EcsService
